model Friend {
  id        String   @id @default(cuid())
  status    String   @default("PENDING") // PENDING, ACCEPTED, REJECTED, BLOCKED
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  senderId String
  sender   User   @relation("SentFriendRequests", fields: [senderId], references: [id], onDelete: Cascade)
  
  receiverId String
  receiver   User   @relation("ReceivedFriendRequests", fields: [receiverId], references: [id], onDelete: Cascade)

  @@unique([senderId, receiverId])
  @@map("friends")
}

model UserPresence {
  id        String     @id @default(cuid())
  status    UserStatus
  lastSeen  DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  // Relations
  userId    String     @unique
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("user_presences")
}
